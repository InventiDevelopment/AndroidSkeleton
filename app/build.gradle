apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'me.tatarka.retrolambda'
apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"

android {
    compileSdkVersion 26
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "cz.inventi.inventiskeleton"
        minSdkVersion 19
        targetSdkVersion 26
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
            storeFile file('../keystore/debug.keystore')
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
            storeFile file('../keystore/release.keystore')
        }
    }

    productFlavors {
        dev {
            signingConfig signingConfigs.debug
            versionCode gitVersionCodeTime
            versionName gitVersionName
            applicationIdSuffix '.dev'

            buildConfigField "String", "BASE_API_URL", "\"https://jsonplaceholder.typicode.com/\""
            buildConfigField "String", "API_PROFILE_PIC", "\"https://api.adorable.io/avatars/285/\""
        }
        prod {
            signingConfig signingConfigs.release
            versionCode gitVersionCode
            versionName gitVersionName
            buildConfigField "String", "BASE_API_URL", "\"https://jsonplaceholder.typicode.com/\""
            buildConfigField "String", "API_PROFILE_PIC", "\"https://api.adorable.io/avatars/285/\""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}
//def supportLib = '25.4.0'
def supportLib = '26.0.0'
def dagger = '2.11'
def mosby = '3.0.0'
def rxJava = '2.0.1'
def conductor = '2.1.2'
def retrofit = '2.3.0'
def okHttp = '3.8.0'
def rxBinding = '2.0.0'
def glide = '4.0.0'
def circleimageview = '2.1.0'
def materialDesignDimens = '1.4'
//def butterKnife = '8.5.1'

// debug
def leakCanary = '1.5.1'
def stetho = '1.5.0'

// testing
def junitVersion = '4.12'
def mockitoVersion = '1.10.19'
def powerMockito = '1.6.2'
def espressoVersion = '2.2.2'
def hamcrestVersion = '1.3'
def runnerVersion = '0.5'
def rulesVersion = '0.5'

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // support libs
    androidTestCompile "com.android.support:support-v4:$supportLib"
    compile "com.android.support:appcompat-v7:$supportLib"
    compile "com.android.support:recyclerview-v7:$supportLib"
    compile "com.android.support:design:$supportLib"
    compile "com.android.support:cardview-v7:$supportLib"

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // RxJava
    compile "io.reactivex.rxjava2:rxandroid:$rxJava"
    compile "io.reactivex.rxjava2:rxjava:$rxJava"

    // mosby
    compile "com.hannesdorfmann.mosby3:mvp-conductor:$mosby"
    compile "com.hannesdorfmann.mosby3:viewstate-conductor:$mosby"
    compile "com.hannesdorfmann.mosby3:mvi-conductor:$mosby"
    compile "com.hannesdorfmann.mosby3:mvp-nullobject-presenter:$mosby"

    // conductor
    compile "com.bluelinelabs:conductor:$conductor"
    compile "com.bluelinelabs:conductor-support:$conductor"
    compile "com.bluelinelabs:conductor-rxlifecycle2:$conductor"

    // dagger
    compile "com.google.dagger:dagger:$dagger"
    compile "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    // retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    // okHttp
    compile "com.squareup.okhttp3:okhttp:$okHttp"
    compile "com.squareup.okhttp3:logging-interceptor:$okHttp"

    compile "com.facebook.stetho:stetho:$stetho"
    compile "com.facebook.stetho:stetho-okhttp3:$stetho"

    compile 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0-RC2'

    // butterKnife
//    compile "com.jakewharton:butterknife:$butterKnife"
//    kapt "com.jakewharton:butterknife-compiler:$butterKnife"

    // rxbinding
    compile "com.jakewharton.rxbinding2:rxbinding:$rxBinding"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBinding"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxBinding"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // images
    compile "com.github.bumptech.glide:glide:$glide-RC1"
    compile "de.hdodenhof:circleimageview:$circleimageview"

    compile "com.dmitrymalkovich.android:material-design-dimens:$materialDesignDimens"

    // testing
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })

    // Dependencies for local unit tests
    testCompile "junit:junit:$junitVersion"
//    testCompile "org.mockito:mockito-all:$mockitoVersion"
//    testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
//    testCompile "org.powermock:powermock-module-junit4:$powerMockito"
//    testCompile "org.powermock:powermock-api-mockito:$powerMockito"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"

    // kotlin specific testing
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    testCompile 'org.amshove.kluent:kluent:1.14'

    androidTestCompile "com.android.support:support-annotations:$supportLib"

}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLib"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}
